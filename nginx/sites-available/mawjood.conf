# HTTP redirect to HTTPS
server {
    listen 80;
    server_name mawjood.mosaibah.com cms.mawjood.mosaibah.com;

    # Certbot challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all HTTP to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Main HTTPS server
server {
    listen 443 ssl http2;
    server_name mawjood.mosaibah.com;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/mawjood.mosaibah.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mawjood.mosaibah.com/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozTLS:10m;
    ssl_session_tickets off;

    # Modern configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS
    add_header Strict-Transport-Security "max-age=63072000" always;

    # CockroachDB Admin UI
    location /admin/ {
        proxy_pass http://cockroachdb:8080/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Default response with API information
    location / {
        return 200 '{"message": "Mawjood API", "cms_grpc": "cms.mawjood.mosaibah.com:443", "discovery_grpc": "mawjood.mosaibah.com:444", "admin_ui": "https://mawjood.mosaibah.com/admin/", "health": "https://mawjood.mosaibah.com/health"}';
        add_header Content-Type application/json;
    }
}

# CMS gRPC Service
server {
    listen 443 ssl http2;
    server_name cms.mawjood.mosaibah.com;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/mawjood.mosaibah.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mawjood.mosaibah.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS
    add_header Strict-Transport-Security "max-age=63072000" always;

    # gRPC configuration for CMS
    location / {
        grpc_pass grpc://cms-service:9001;
        grpc_set_header Host $host;
        grpc_set_header X-Real-IP $remote_addr;
        grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        grpc_set_header X-Forwarded-Proto $scheme;
        
        # gRPC specific settings
        grpc_read_timeout 300;
        grpc_send_timeout 300;
        client_body_timeout 300;
        client_header_timeout 300;
        
        # Enable gRPC error responses
        error_page 502 = /error502grpc;
    }

    # Custom error page for gRPC
    location = /error502grpc {
        internal;
        default_type application/grpc;
        add_header grpc-status 14;
        add_header grpc-message "Service Unavailable";
        return 204;
    }
}

# Discovery gRPC Service (port 444)
server {
    listen 444 ssl http2;
    server_name mawjood.mosaibah.com;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/mawjood.mosaibah.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mawjood.mosaibah.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS
    add_header Strict-Transport-Security "max-age=63072000" always;

    # gRPC configuration for Discovery
    location / {
        grpc_pass grpc://discovery-service:9002;
        grpc_set_header Host $host;
        grpc_set_header X-Real-IP $remote_addr;
        grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        grpc_set_header X-Forwarded-Proto $scheme;
        
        # gRPC specific settings
        grpc_read_timeout 300;
        grpc_send_timeout 300;
        client_body_timeout 300;
        client_header_timeout 300;
        
        # Enable gRPC error responses
        error_page 502 = /error502grpc;
    }

    # Custom error page for gRPC
    location = /error502grpc {
        internal;
        default_type application/grpc;
        add_header grpc-status 14;
        add_header grpc-message "Service Unavailable";
        return 204;
    }
} 