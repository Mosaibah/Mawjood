// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.1
// source: cms.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_cms_proto protoreflect.FileDescriptor

const file_cms_proto_rawDesc = "" +
	"\n" +
	"\tcms.proto\x12\n" +
	"mawjood.v1\x1a\x0emessages.proto\x1a\x1bgoogle/protobuf/empty.proto2\x87\x03\n" +
	"\n" +
	"CMSService\x12F\n" +
	"\rCreateContent\x12 .mawjood.v1.CreateContentRequest\x1a\x13.mawjood.v1.Content\x12F\n" +
	"\rUpdateContent\x12 .mawjood.v1.UpdateContentRequest\x1a\x13.mawjood.v1.Content\x12I\n" +
	"\rDeleteContent\x12 .mawjood.v1.DeleteContentRequest\x1a\x16.google.protobuf.Empty\x12Q\n" +
	"\fListContents\x12\x1f.mawjood.v1.ListContentsRequest\x1a .mawjood.v1.ListContentsResponse\x12K\n" +
	"\x12ImportFromExternal\x12\x19.mawjood.v1.ImportRequest\x1a\x1a.mawjood.v1.ImportResponseB\"Z mawjood/gen/go/packages/proto/v1b\x06proto3"

var file_cms_proto_goTypes = []any{
	(*CreateContentRequest)(nil), // 0: mawjood.v1.CreateContentRequest
	(*UpdateContentRequest)(nil), // 1: mawjood.v1.UpdateContentRequest
	(*DeleteContentRequest)(nil), // 2: mawjood.v1.DeleteContentRequest
	(*ListContentsRequest)(nil),  // 3: mawjood.v1.ListContentsRequest
	(*ImportRequest)(nil),        // 4: mawjood.v1.ImportRequest
	(*Content)(nil),              // 5: mawjood.v1.Content
	(*emptypb.Empty)(nil),        // 6: google.protobuf.Empty
	(*ListContentsResponse)(nil), // 7: mawjood.v1.ListContentsResponse
	(*ImportResponse)(nil),       // 8: mawjood.v1.ImportResponse
}
var file_cms_proto_depIdxs = []int32{
	0, // 0: mawjood.v1.CMSService.CreateContent:input_type -> mawjood.v1.CreateContentRequest
	1, // 1: mawjood.v1.CMSService.UpdateContent:input_type -> mawjood.v1.UpdateContentRequest
	2, // 2: mawjood.v1.CMSService.DeleteContent:input_type -> mawjood.v1.DeleteContentRequest
	3, // 3: mawjood.v1.CMSService.ListContents:input_type -> mawjood.v1.ListContentsRequest
	4, // 4: mawjood.v1.CMSService.ImportFromExternal:input_type -> mawjood.v1.ImportRequest
	5, // 5: mawjood.v1.CMSService.CreateContent:output_type -> mawjood.v1.Content
	5, // 6: mawjood.v1.CMSService.UpdateContent:output_type -> mawjood.v1.Content
	6, // 7: mawjood.v1.CMSService.DeleteContent:output_type -> google.protobuf.Empty
	7, // 8: mawjood.v1.CMSService.ListContents:output_type -> mawjood.v1.ListContentsResponse
	8, // 9: mawjood.v1.CMSService.ImportFromExternal:output_type -> mawjood.v1.ImportResponse
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_cms_proto_init() }
func file_cms_proto_init() {
	if File_cms_proto != nil {
		return
	}
	file_messages_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cms_proto_rawDesc), len(file_cms_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cms_proto_goTypes,
		DependencyIndexes: file_cms_proto_depIdxs,
	}.Build()
	File_cms_proto = out.File
	file_cms_proto_goTypes = nil
	file_cms_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CMSServiceClient is the client API for CMSService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CMSServiceClient interface {
	CreateContent(ctx context.Context, in *CreateContentRequest, opts ...grpc.CallOption) (*Content, error)
	UpdateContent(ctx context.Context, in *UpdateContentRequest, opts ...grpc.CallOption) (*Content, error)
	DeleteContent(ctx context.Context, in *DeleteContentRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ListContents(ctx context.Context, in *ListContentsRequest, opts ...grpc.CallOption) (*ListContentsResponse, error)
	ImportFromExternal(ctx context.Context, in *ImportRequest, opts ...grpc.CallOption) (*ImportResponse, error)
}

type cMSServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCMSServiceClient(cc grpc.ClientConnInterface) CMSServiceClient {
	return &cMSServiceClient{cc}
}

func (c *cMSServiceClient) CreateContent(ctx context.Context, in *CreateContentRequest, opts ...grpc.CallOption) (*Content, error) {
	out := new(Content)
	err := c.cc.Invoke(ctx, "/mawjood.v1.CMSService/CreateContent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cMSServiceClient) UpdateContent(ctx context.Context, in *UpdateContentRequest, opts ...grpc.CallOption) (*Content, error) {
	out := new(Content)
	err := c.cc.Invoke(ctx, "/mawjood.v1.CMSService/UpdateContent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cMSServiceClient) DeleteContent(ctx context.Context, in *DeleteContentRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/mawjood.v1.CMSService/DeleteContent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cMSServiceClient) ListContents(ctx context.Context, in *ListContentsRequest, opts ...grpc.CallOption) (*ListContentsResponse, error) {
	out := new(ListContentsResponse)
	err := c.cc.Invoke(ctx, "/mawjood.v1.CMSService/ListContents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cMSServiceClient) ImportFromExternal(ctx context.Context, in *ImportRequest, opts ...grpc.CallOption) (*ImportResponse, error) {
	out := new(ImportResponse)
	err := c.cc.Invoke(ctx, "/mawjood.v1.CMSService/ImportFromExternal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CMSServiceServer is the server API for CMSService service.
type CMSServiceServer interface {
	CreateContent(context.Context, *CreateContentRequest) (*Content, error)
	UpdateContent(context.Context, *UpdateContentRequest) (*Content, error)
	DeleteContent(context.Context, *DeleteContentRequest) (*emptypb.Empty, error)
	ListContents(context.Context, *ListContentsRequest) (*ListContentsResponse, error)
	ImportFromExternal(context.Context, *ImportRequest) (*ImportResponse, error)
}

// UnimplementedCMSServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCMSServiceServer struct {
}

func (*UnimplementedCMSServiceServer) CreateContent(context.Context, *CreateContentRequest) (*Content, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateContent not implemented")
}
func (*UnimplementedCMSServiceServer) UpdateContent(context.Context, *UpdateContentRequest) (*Content, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateContent not implemented")
}
func (*UnimplementedCMSServiceServer) DeleteContent(context.Context, *DeleteContentRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteContent not implemented")
}
func (*UnimplementedCMSServiceServer) ListContents(context.Context, *ListContentsRequest) (*ListContentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListContents not implemented")
}
func (*UnimplementedCMSServiceServer) ImportFromExternal(context.Context, *ImportRequest) (*ImportResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImportFromExternal not implemented")
}

func RegisterCMSServiceServer(s *grpc.Server, srv CMSServiceServer) {
	s.RegisterService(&_CMSService_serviceDesc, srv)
}

func _CMSService_CreateContent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateContentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CMSServiceServer).CreateContent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mawjood.v1.CMSService/CreateContent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CMSServiceServer).CreateContent(ctx, req.(*CreateContentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CMSService_UpdateContent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateContentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CMSServiceServer).UpdateContent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mawjood.v1.CMSService/UpdateContent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CMSServiceServer).UpdateContent(ctx, req.(*UpdateContentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CMSService_DeleteContent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteContentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CMSServiceServer).DeleteContent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mawjood.v1.CMSService/DeleteContent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CMSServiceServer).DeleteContent(ctx, req.(*DeleteContentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CMSService_ListContents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListContentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CMSServiceServer).ListContents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mawjood.v1.CMSService/ListContents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CMSServiceServer).ListContents(ctx, req.(*ListContentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CMSService_ImportFromExternal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CMSServiceServer).ImportFromExternal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mawjood.v1.CMSService/ImportFromExternal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CMSServiceServer).ImportFromExternal(ctx, req.(*ImportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CMSService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mawjood.v1.CMSService",
	HandlerType: (*CMSServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateContent",
			Handler:    _CMSService_CreateContent_Handler,
		},
		{
			MethodName: "UpdateContent",
			Handler:    _CMSService_UpdateContent_Handler,
		},
		{
			MethodName: "DeleteContent",
			Handler:    _CMSService_DeleteContent_Handler,
		},
		{
			MethodName: "ListContents",
			Handler:    _CMSService_ListContents_Handler,
		},
		{
			MethodName: "ImportFromExternal",
			Handler:    _CMSService_ImportFromExternal_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cms.proto",
}
