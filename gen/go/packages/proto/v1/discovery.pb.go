// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.1
// source: discovery.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_discovery_proto protoreflect.FileDescriptor

const file_discovery_proto_rawDesc = "" +
	"\n" +
	"\x0fdiscovery.proto\x12\n" +
	"mawjood.v1\x1a\x0emessages.proto2\x80\x02\n" +
	"\x10DiscoveryService\x12W\n" +
	"\x0eSearchContents\x12!.mawjood.v1.SearchContentsRequest\x1a\".mawjood.v1.SearchContentsResponse\x12Q\n" +
	"\fListContents\x12\x1f.mawjood.v1.ListContentsRequest\x1a .mawjood.v1.ListContentsResponse\x12@\n" +
	"\n" +
	"GetContent\x12\x1d.mawjood.v1.GetContentRequest\x1a\x13.mawjood.v1.ContentB\"Z mawjood/gen/go/packages/proto/v1b\x06proto3"

var file_discovery_proto_goTypes = []any{
	(*SearchContentsRequest)(nil),  // 0: mawjood.v1.SearchContentsRequest
	(*ListContentsRequest)(nil),    // 1: mawjood.v1.ListContentsRequest
	(*GetContentRequest)(nil),      // 2: mawjood.v1.GetContentRequest
	(*SearchContentsResponse)(nil), // 3: mawjood.v1.SearchContentsResponse
	(*ListContentsResponse)(nil),   // 4: mawjood.v1.ListContentsResponse
	(*Content)(nil),                // 5: mawjood.v1.Content
}
var file_discovery_proto_depIdxs = []int32{
	0, // 0: mawjood.v1.DiscoveryService.SearchContents:input_type -> mawjood.v1.SearchContentsRequest
	1, // 1: mawjood.v1.DiscoveryService.ListContents:input_type -> mawjood.v1.ListContentsRequest
	2, // 2: mawjood.v1.DiscoveryService.GetContent:input_type -> mawjood.v1.GetContentRequest
	3, // 3: mawjood.v1.DiscoveryService.SearchContents:output_type -> mawjood.v1.SearchContentsResponse
	4, // 4: mawjood.v1.DiscoveryService.ListContents:output_type -> mawjood.v1.ListContentsResponse
	5, // 5: mawjood.v1.DiscoveryService.GetContent:output_type -> mawjood.v1.Content
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_discovery_proto_init() }
func file_discovery_proto_init() {
	if File_discovery_proto != nil {
		return
	}
	file_messages_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_discovery_proto_rawDesc), len(file_discovery_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_discovery_proto_goTypes,
		DependencyIndexes: file_discovery_proto_depIdxs,
	}.Build()
	File_discovery_proto = out.File
	file_discovery_proto_goTypes = nil
	file_discovery_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DiscoveryServiceClient is the client API for DiscoveryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DiscoveryServiceClient interface {
	SearchContents(ctx context.Context, in *SearchContentsRequest, opts ...grpc.CallOption) (*SearchContentsResponse, error)
	ListContents(ctx context.Context, in *ListContentsRequest, opts ...grpc.CallOption) (*ListContentsResponse, error)
	GetContent(ctx context.Context, in *GetContentRequest, opts ...grpc.CallOption) (*Content, error)
}

type discoveryServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDiscoveryServiceClient(cc grpc.ClientConnInterface) DiscoveryServiceClient {
	return &discoveryServiceClient{cc}
}

func (c *discoveryServiceClient) SearchContents(ctx context.Context, in *SearchContentsRequest, opts ...grpc.CallOption) (*SearchContentsResponse, error) {
	out := new(SearchContentsResponse)
	err := c.cc.Invoke(ctx, "/mawjood.v1.DiscoveryService/SearchContents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discoveryServiceClient) ListContents(ctx context.Context, in *ListContentsRequest, opts ...grpc.CallOption) (*ListContentsResponse, error) {
	out := new(ListContentsResponse)
	err := c.cc.Invoke(ctx, "/mawjood.v1.DiscoveryService/ListContents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discoveryServiceClient) GetContent(ctx context.Context, in *GetContentRequest, opts ...grpc.CallOption) (*Content, error) {
	out := new(Content)
	err := c.cc.Invoke(ctx, "/mawjood.v1.DiscoveryService/GetContent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DiscoveryServiceServer is the server API for DiscoveryService service.
type DiscoveryServiceServer interface {
	SearchContents(context.Context, *SearchContentsRequest) (*SearchContentsResponse, error)
	ListContents(context.Context, *ListContentsRequest) (*ListContentsResponse, error)
	GetContent(context.Context, *GetContentRequest) (*Content, error)
}

// UnimplementedDiscoveryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDiscoveryServiceServer struct {
}

func (*UnimplementedDiscoveryServiceServer) SearchContents(context.Context, *SearchContentsRequest) (*SearchContentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchContents not implemented")
}
func (*UnimplementedDiscoveryServiceServer) ListContents(context.Context, *ListContentsRequest) (*ListContentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListContents not implemented")
}
func (*UnimplementedDiscoveryServiceServer) GetContent(context.Context, *GetContentRequest) (*Content, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContent not implemented")
}

func RegisterDiscoveryServiceServer(s *grpc.Server, srv DiscoveryServiceServer) {
	s.RegisterService(&_DiscoveryService_serviceDesc, srv)
}

func _DiscoveryService_SearchContents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchContentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryServiceServer).SearchContents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mawjood.v1.DiscoveryService/SearchContents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryServiceServer).SearchContents(ctx, req.(*SearchContentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscoveryService_ListContents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListContentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryServiceServer).ListContents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mawjood.v1.DiscoveryService/ListContents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryServiceServer).ListContents(ctx, req.(*ListContentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscoveryService_GetContent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetContentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryServiceServer).GetContent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mawjood.v1.DiscoveryService/GetContent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryServiceServer).GetContent(ctx, req.(*GetContentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DiscoveryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mawjood.v1.DiscoveryService",
	HandlerType: (*DiscoveryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SearchContents",
			Handler:    _DiscoveryService_SearchContents_Handler,
		},
		{
			MethodName: "ListContents",
			Handler:    _DiscoveryService_ListContents_Handler,
		},
		{
			MethodName: "GetContent",
			Handler:    _DiscoveryService_GetContent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "discovery.proto",
}
