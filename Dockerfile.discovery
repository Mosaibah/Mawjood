# Multi-stage build for Discovery Service
FROM golang:1.24-alpine AS builder

# Install git and other dependencies
RUN apk add --no-cache git ca-certificates tzdata

# Set working directory
WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the Discovery server
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o discovery-server ./packages/discovery/server

# Final stage - minimal image
FROM alpine:latest

# Install ca-certificates for HTTPS requests
RUN apk --no-cache add ca-certificates tzdata

WORKDIR /root/

# Copy the binary from builder stage
COPY --from=builder /app/discovery-server .

# Expose port
EXPOSE 9002

# Command to run
CMD ["./discovery-server"] 